{"version":3,"sources":["components/Nav/Nav.js","components/Navbar/Navbar.js","components/Header/Header.js","components/Button/Button.js","components/Form/Form.js","components/Todo/Todo.js","containers/Lists/ActiveList.js","containers/Lists/DoneList.js","containers/Bottom/Bottom.js","containers/Main/Main.js","App.js","index.js"],"names":["Nav","title","path","className","to","Navbar","props","Object","keys","items","map","nav","key","Header","navs","Button","clickHandler","type","rest","onClick","children","Form","toggleDisplay","setState","display","state","handleInputChange","e","todo","target","name","value","handleSubmit","preventDefault","Date","now","submitHandler","description","this","onSubmit","onChange","React","Component","Todo","actions","handleActive","id","active","handleDelete","ActiveList","activeList","list","filter","DoneList","doneList","Bottom","displayFormHandler","Main","updateLocalStorage","localStorage","setItem","JSON","stringify","todoList","handleActions","action","handleAddToList","console","log","randomTodos","parse","getItem","actionHandlers","formElement","createRef","current","ref","exact","render","done","App","basename","process","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bdc6023d.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nfunction Nav({ title, path }) {\n  return (\n    <li className=\"nav-link\">\n      <NavLink to={path}>{title}</NavLink>\n    </li>\n  )\n}\n\nexport default Nav;","import React from 'react';\n\nimport Nav from '../Nav/Nav';\n\nfunction Navbar(props) {\n\n  return (\n    <nav className=\"navbar\">\n      <div className=\"container\">\n        <ul>\n          {Object.keys(props.items).map((nav) => {\n            return <Nav title={nav} path={props.items[nav].path} key={nav} />\n          })}\n        </ul>\n      </div>\n    </nav>\n  )\n\n}\n\nexport default Navbar;","import React from 'react';\n\nimport Navbar from '../Navbar/Navbar';\n\nfunction Header(props) {\n  return (\n    <header className=\"header\">\n      <div className=\"page-heading\">Todo List</div>\n      <Navbar items={props.navs} />\n    </header>\n  )\n}\n\nexport default Header;","import React from 'react';\n\nfunction Button({ clickHandler, type, ...rest }) {\n\n  return (\n    <button className={`btn btn-${type}`} onClick={clickHandler}>{rest.children}</button>\n  )\n}\n\nexport default Button;","import React from 'react';\n\nimport Button from '../Button/Button';\n\nclass Form extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      todo: {\n        title: '',\n        description: ''\n      },\n      display: false\n    }\n  }\n\n  toggleDisplay = () => {\n    this.setState({\n      display: !this.state.display\n    });\n  }\n\n  handleInputChange = (e) => {\n    this.setState({\n      todo: {\n        ...this.state.todo,\n        [e.target.name]: e.target.value\n      }\n    });\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    const todo = {\n      ...this.state.todo,\n      'id': Date.now(),\n      'active': true\n    }\n\n    if (this.state.todo.title) {\n      this.props.submitHandler(todo);\n      this.toggleDisplay();\n    }\n  }\n\n  render() {\n    return (\n      <div className={`form-wrapper ${this.state.display ? 'active' : ''}`}>\n        <form onSubmit={this.handleSubmit}>\n          <label>Title</label>\n          <div>\n            <input type=\"text\" name=\"title\" value={this.state.todo.title} onChange={this.handleInputChange} />\n          </div>\n\n          <label>Description</label>\n          <div>\n            <textarea name=\"description\" value={this.state.todo.description} onChange={this.handleInputChange} />\n          </div>\n          <Button type=\"primary\">Add</Button>\n          <Button clickHandler={this.toggleDisplay} type=\"primary\">Cancel</Button>\n        </form>\n      </div>\n    )\n  }\n\n}\n\nexport default Form;","import React from 'react';\nimport { RiDeleteBinLine, RiCheckLine, RiCloseLine } from 'react-icons/ri';\n\nimport Button from '../Button/Button';\n\nfunction Todo({ todo, actions }) {\n\n  const handleTodoActive = () => actions.handleActive(todo.id);\n  const handleTodoDelete = () => actions.handleDelete(todo.id);\n\n  return (\n    <div className=\"todo clearfix\">\n      <div className=\"todo-contents\">\n        <h3 className=\"title\">{todo.title}</h3>\n        <p className=\"description\">{todo.description}</p>\n      </div>\n      <div className=\"todo-actions\">\n        <Button clickHandler={handleTodoActive} type=\"icon\">\n          {todo.active ? <RiCheckLine /> : <RiCloseLine />}\n        </Button>\n        <Button clickHandler={handleTodoDelete} type=\"icon\">\n          <RiDeleteBinLine />\n        </Button>\n      </div>\n    </div>\n  )\n}\n\nexport default Todo;","import React from 'react';\nimport Todo from '../../components/Todo/Todo';\n\nclass ActiveList extends React.Component {\n\n  render() {\n    const activeList = this.props.list.filter(e => e.active);\n\n    return (\n      <div>\n        {activeList.map(todo => {\n          return <Todo todo={todo} key={todo.id} actions={this.props.actions} />\n        })}\n      </div>\n    )\n  }\n}\n\nexport default ActiveList;","import React from 'react';\nimport Todo from '../../components/Todo/Todo';\n\nclass DoneList extends React.Component {\n\n  render() {\n    const doneList = this.props.list.filter(e => !e.active);\n\n    return (\n      <div>\n        {doneList.map(todo => {\n          return <Todo todo={todo} key={todo.id} actions={this.props.actions} />\n        })}\n      </div>\n    )\n  }\n}\n\nexport default DoneList;","import React from 'react';\n\nimport Button from '../../components/Button/Button';\n\nfunction Bottom(props) {\n\n  return(\n    <div className=\"bottom-layout\">\n      <div className=\"container\">\n        <Button clickHandler={props.displayFormHandler} type=\"primary\">Add New Todo</Button>\n      </div>\n    </div>\n  )\n}\n\nexport default Bottom;","import React from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\n\nimport Header from '../../components/Header/Header';\nimport Form from '../../components/Form/Form';\nimport ActiveList from '../Lists/ActiveList';\nimport DoneList from '../Lists/DoneList';\nimport Bottom from '../Bottom/Bottom';\n\nclass Main extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.navs = {\n      'active': {\n        'path': '/active'\n      },\n      'done': {\n        'path': '/done'\n      }\n    };\n\n    this.randomTodos = [\n      {\n        active: true,\n        description: \"Suspendisse potenti nullam ac tortor vitae purus faucibus ornare.\",\n        id: 1,\n        title: \"Lorem ipsum dolor sit amet\"\n      },\n      {\n        active: true,\n        description: \"Potenti nullam ac tortor vitae purus faucibus ornare.\",\n        id: 2,\n        title: \"Lorem ipsum dolor sit amet\"\n      },\n      {\n        active: true,\n        description: \"Suspendisse potenti nullam ac tortor vitae purus faucibus ornare.\",\n        id: 3,\n        title: \"Lorem ipsum dolor sit amet\"\n      },\n      {\n        active: true,\n        description: \"Suspendisse potenti nullam ac tortor vitae purus faucibus ornare.\",\n        id: 4,\n        title: \"Lorem ipsum dolor sit amet\"\n      },\n      {\n        active: false,\n        description: \"Hurray! I already did this todo.\",\n        id: 5,\n        title: \"Hurray! I already did this todo.\"\n      }\n    ]\n\n    this.state = {\n      todoList: JSON.parse(localStorage.getItem('todoList')) || [...this.randomTodos],\n      displayFormHandler: () => { },\n    }\n\n    this.actionHandlers = {\n      handleActive: (id) => this.handleActions('active', id),\n      handleDelete: (id) => this.handleActions('delete', id)\n    }\n\n    this.formElement = React.createRef();\n  }\n\n  componentDidMount() {\n    this.setState({\n      displayFormHandler: this.formElement.current.toggleDisplay,\n    })\n  }\n\n  updateLocalStorage = () => {\n    localStorage.setItem('todoList', JSON.stringify(this.state.todoList));\n  }\n\n  handleActions = (action, id) => {\n\n    const todo = this.state.todoList.filter(e => {\n      if (e.id === id) {\n        if (action === 'delete') return false;\n        e[action] = !e[action];\n      };\n      return true;\n    });\n\n    this.setState({\n      todoList: todo\n    }, this.updateLocalStorage);\n  }\n\n  handleAddToList = (todo) => {\n    console.log(todo);\n    this.setState({\n      todoList: [todo, ...this.state.todoList],\n    }, this.updateLocalStorage)\n  }\n\n  render() {\n    return (\n      <>\n        <Form submitHandler={this.handleAddToList} ref={this.formElement} />\n\n        <div className=\"main-wrapper\">\n\n          <Header navs={this.navs} />\n\n          <main>\n            <div className=\"container\">\n              <Switch>\n\n                <Route exact path=\"/\" render={() => <Redirect to={this.navs.active.path} />} />\n\n                <Route exact path={this.navs.active.path}>\n                  <ActiveList list={this.state.todoList} actions={this.actionHandlers} />\n                </Route>\n\n                <Route exact path={this.navs.done.path}>\n                  <DoneList list={this.state.todoList} actions={this.actionHandlers} />\n                </Route>\n\n              </Switch>\n            </div>\n          </main>\n\n          <Bottom displayFormHandler={this.state.displayFormHandler} />\n        </div>\n      </>\n    )\n  }\n}\n\nexport default Main;\n","import React from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport Main from './containers/Main/Main';\n\nfunction App() {\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <Main />\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './styles/index.scss';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}