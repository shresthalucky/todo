{"version":3,"sources":["components/Navbar/Navbar.js","components/Header/Header.js","components/Button/Button.js","components/Input/Input.js","components/Form/Form.js","components/Todo/Todo.js","containers/Lists/AllList.js","containers/Lists/ActiveList.js","containers/Lists/DoneList.js","containers/Main/Main.js","App.js","index.js"],"names":["Navbar","props","className","Object","keys","items","map","nav","key","exact","to","path","Header","navs","Button","clickHandler","type","group","rest","onClick","children","Input","inputElement","name","changeHandler","value","placeholder","inputTag","onChange","Form","toggleDescription","setState","isDescription","state","handleInputChange","e","todo","target","handleSubmit","preventDefault","Date","now","title","submitHandler","resetTodo","description","this","React","Component","Todo","actions","iconColor","active","handleActive","id","handleDelete","AllList","list","ActiveList","activeList","filter","DoneList","doneList","Main","updateLocalStorage","localStorage","setItem","JSON","stringify","todoList","handleActions","action","handleAddToList","handleSearch","searchText","all","done","randomTodos","parse","getItem","displayFormHandler","actionHandlers","toLowerCase","includes","App","basename","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dcc47477.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nfunction Navbar(props) {\n\n  return (\n    <nav className=\"navbar\">\n      <div className=\"container\">\n        <ul>\n          {Object.keys(props.items).map((nav) => {\n            return (\n              <li className=\"nav-link\" key={nav}>\n                <NavLink exact to={props.items[nav].path}>{nav}</NavLink>\n              </li>\n            )\n          })}\n        </ul>\n      </div>\n    </nav>\n  )\n}\n\nexport default Navbar;","import React from 'react';\n\nimport Navbar from '../Navbar/Navbar';\n\nfunction Header(props) {\n  return (\n    <header className=\"header\">\n      <div className=\"page-heading\">Todo List</div>\n      <Navbar items={props.navs} />\n    </header>\n  )\n}\n\nexport default Header;","import React from 'react';\n\nfunction Button({ clickHandler, type, group, ...rest }) {\n\n  const btnElement = type ? <button type={type} className={`btn btn-${group}`} onClick={clickHandler}>{rest.children}</button>\n    : <button className={`btn btn-${group}`} onClick={clickHandler}>{rest.children}</button>\n\n  return btnElement;\n}\n\nexport default Button;","import React from 'react';\n\nfunction Input({ name, changeHandler, value, className, placeholder, inputTag }) {\n\n  let inputElement;\n\n  switch (inputTag) {\n    case 'input':\n      inputElement =\n        <input\n          name={name}\n          type=\"text\"\n          onChange={changeHandler} value={value}\n          placeholder={placeholder}\n        />\n      break;\n\n    case 'textarea':\n      inputElement =\n        <textarea\n          name={name}\n          onChange={changeHandler} value={value}\n          placeholder={placeholder}\n        />\n      break;\n\n    default:\n  }\n\n  return (\n    <div className={`input ${className}`}>\n      {inputElement}\n    </div>\n  )\n}\n\nexport default Input;","import React from 'react';\nimport { RiArrowUpSLine, RiArrowDownSLine, RiAddLine } from 'react-icons/ri';\nimport Button from '../Button/Button';\nimport Input from '../Input/Input';\n\n\nclass Form extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      todo: {\n        title: '',\n        description: ''\n      },\n      isDescription: false\n    }\n  }\n\n  toggleDescription = () => {\n    this.setState({\n      isDescription: !this.state.isDescription\n    });\n  }\n\n  handleInputChange = (e) => {\n    this.setState({\n      todo: {\n        ...this.state.todo,\n        [e.target.name]: e.target.value\n      }\n    });\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    const todo = {\n      ...this.state.todo,\n      'id': Date.now(),\n      'active': true\n    }\n\n    if (this.state.todo.title) {\n      this.props.submitHandler(todo);\n      this.resetTodo();\n    }\n  }\n\n  resetTodo = () => {\n    this.setState({\n      todo: {\n        title: '',\n        description: ''\n      }\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"form-wrapper\">\n        <form>\n          <div className=\"title-wrapper clearfix\">\n            <div className=\"title-input\">\n              <Input\n                name=\"title\"\n                changeHandler={this.handleInputChange}\n                value={this.state.todo.title}\n                className=\"form\"\n                placeholder=\"Title\"\n                inputTag=\"input\"\n              />\n            </div>\n\n            <div className=\"form-actions\">\n              <Button group=\"icon secondary\" type=\"button\" clickHandler={this.toggleDescription}>\n                {this.state.isDescription ? <RiArrowUpSLine /> : <RiArrowDownSLine />}\n              </Button>\n              <Button group=\"icon primary\" type=\"submit\" clickHandler={this.handleSubmit}>\n                <RiAddLine />\n              </Button>\n            </div>\n          </div>\n\n          <div className={`description-wrapper ${this.state.isDescription ? 'active' : ''}`} >\n            <Input\n              name=\"description\"\n              changeHandler={this.handleInputChange}\n              value={this.state.todo.description}\n              className=\"form\"\n              placeholder=\"Description\"\n              inputTag=\"textarea\"\n            />\n          </div>\n        </form>\n      </div>\n    )\n  }\n\n}\n\nexport default Form;","import React from 'react';\nimport { RiDeleteBinLine, RiCheckLine, RiCloseLine } from 'react-icons/ri';\n\nimport Button from '../Button/Button';\n\nfunction Todo({ todo, actions }) {\n\n  const handleTodoActive = () => actions.handleActive(todo.id);\n  const handleTodoDelete = () => actions.handleDelete(todo.id);\n\n  const iconColor = todo.active ? 'green' : 'blue';\n\n  return (\n    <div className=\"todo clearfix\">\n      <div className={`todo-contents ${!todo.active && 'fade'}`}>\n        <h3 className=\"title\">{todo.title}</h3>\n        <p className=\"description\">{todo.description}</p>\n      </div>\n      <div className=\"todo-actions\">\n        <Button clickHandler={handleTodoActive} group={`icon secondary ${iconColor}`}>\n          {todo.active ? <RiCheckLine /> : <RiCloseLine />}\n        </Button>\n        <Button clickHandler={handleTodoDelete} group=\"icon secondary red\">\n          <RiDeleteBinLine />\n        </Button>\n      </div>\n    </div>\n  )\n}\n\nexport default Todo;","import React from 'react';\nimport Todo from '../../components/Todo/Todo';\n\nclass AllList extends React.Component {\n\n  render() {\n    return (\n      <div className=\"list\">\n        {this.props.list.map(todo => {\n          return <Todo todo={todo} key={todo.id} actions={this.props.actions} />\n        })}\n      </div>\n    )\n  }\n}\n\nexport default AllList;","import React from 'react';\nimport Todo from '../../components/Todo/Todo';\n\nclass ActiveList extends React.Component {\n\n  render() {\n    const activeList = this.props.list.filter(e => e.active);\n\n    return (\n      <div className=\"list\">\n        {activeList.map(todo => {\n          return <Todo todo={todo} key={todo.id} actions={this.props.actions} />\n        })}\n      </div>\n    )\n  }\n}\n\nexport default ActiveList;","import React from 'react';\nimport Todo from '../../components/Todo/Todo';\n\nclass DoneList extends React.Component {\n\n  render() {\n    const doneList = this.props.list.filter(e => !e.active);\n\n    return (\n      <div className=\"list\">\n        {doneList.map(todo => {\n          return <Todo todo={todo} key={todo.id} actions={this.props.actions} />\n        })}\n      </div>\n    )\n  }\n}\n\nexport default DoneList;","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nimport Header from '../../components/Header/Header';\nimport Form from '../../components/Form/Form';\nimport AllList from '../Lists/AllList';\nimport ActiveList from '../Lists/ActiveList';\nimport DoneList from '../Lists/DoneList';\nimport Input from '../../components/Input/Input';\n\nclass Main extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.navs = {\n      all: {\n        'path': '/'\n      },\n      active: {\n        'path': '/active'\n      },\n      done: {\n        'path': '/done'\n      }\n    };\n\n    this.randomTodos = [\n      {\n        active: true,\n        description: \"Suspendisse potenti nullam ac tortor vitae purus faucibus ornare.\",\n        id: 1,\n        title: \"Lorem ipsum dolor sit amet\"\n      },\n      {\n        active: true,\n        description: \"Potenti nullam ac tortor vitae purus faucibus ornare.\",\n        id: 2,\n        title: \"Lorem ipsum dolor sit amet\"\n      },\n      {\n        active: true,\n        description: \"Suspendisse potenti nullam ac tortor vitae purus faucibus ornare.\",\n        id: 3,\n        title: \"Lorem ipsum dolor sit amet\"\n      },\n      {\n        active: true,\n        description: \"Suspendisse potenti nullam ac tortor vitae purus faucibus ornare.\",\n        id: 4,\n        title: \"Lorem ipsum dolor sit amet\"\n      },\n      {\n        active: false,\n        description: \"Hurray! I already did this todo.\",\n        id: 5,\n        title: \"Hurray! I already did this todo.\"\n      }\n    ]\n\n    this.state = {\n      todoList: JSON.parse(localStorage.getItem('todoList')) || [...this.randomTodos],\n      searchText: '',\n      displayFormHandler: () => { },\n    }\n\n    this.actionHandlers = {\n      handleActive: (id) => this.handleActions('active', id),\n      handleDelete: (id) => this.handleActions('delete', id)\n    }\n  }\n\n  updateLocalStorage = () => {\n    localStorage.setItem('todoList', JSON.stringify(this.state.todoList));\n  }\n\n  handleActions = (action, id) => {\n\n    const todo = this.state.todoList.filter(e => {\n      if (e.id === id) {\n        if (action === 'delete') return false;\n        e[action] = !e[action];\n      };\n      return true;\n    });\n\n    this.setState({\n      todoList: todo\n    }, this.updateLocalStorage);\n  }\n\n  handleAddToList = (todo) => {\n    this.setState({\n      todoList: [todo, ...this.state.todoList],\n    }, this.updateLocalStorage)\n  }\n\n  handleSearch = (e) => {\n    this.setState({\n      searchText: e.target.value\n    })\n  }\n\n  render() {\n\n    const todoList = this.state.todoList.filter(todo =>\n      todo.title.toLowerCase().includes(this.state.searchText.toLowerCase())\n    );\n\n    return (\n      <>\n        <div className=\"main-wrapper\">\n\n          <Header navs={this.navs} />\n\n          <main>\n            <div className=\"container\">\n\n              <Input\n                name=\"search\"\n                changeHandler={this.handleSearch}\n                value={this.state.searchText}\n                className=\"search\"\n                placeholder=\"Search\"\n                inputTag=\"input\"\n              />\n\n              <Form submitHandler={this.handleAddToList} />\n\n              <Switch>\n\n                <Route exact path={this.navs.all.path}>\n                  <AllList list={todoList} actions={this.actionHandlers} />\n                </Route>\n\n                <Route exact path={this.navs.active.path}>\n                  <ActiveList list={todoList} actions={this.actionHandlers} />\n                </Route>\n\n                <Route exact path={this.navs.done.path}>\n                  <DoneList list={todoList} actions={this.actionHandlers} />\n                </Route>\n\n              </Switch>\n            </div>\n          </main>\n        </div>\n      </>\n    )\n  }\n}\n\nexport default Main;\n","import React from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport Main from './containers/Main/Main';\n\nfunction App() {\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <Main />\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './styles/index.scss';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}